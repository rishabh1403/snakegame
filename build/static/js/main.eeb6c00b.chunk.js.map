{"version":3,"sources":["App.js","Grid.js","Snake.js","index.js"],"names":["canvas","ctx","keystate","frames","score","Grid","d","c","r","this","width","height","_grid","x","push","y","val","Snake","direction","_queue","insert","unshift","last","pop","grid","snake","ROWS","COLS","EMPTY","SNAKE","FOOD","LEFT","UP","RIGHT","DOWN","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","setFood","empty","get","randpos","Math","floor","random","length","set","init","sp","loop","nx","ny","tail","remove","update","tw","th","fillStyle","fillRect","fillText","draw","window","requestAnimationFrame","App","document","createElement","getContext","body","appendChild","addEventListener","evt","keyCode","react_default","a","className","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.eeb6c00b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Grid from './Grid';\nimport Snake from './Snake';\nlet grid = new Grid();\nlet snake = new Snake();\n// dimensions\nconst ROWS = 26, COLS = 26;\n\n// Ids for grid\nconst EMPTY = 0, SNAKE = 1, FOOD = 2;\n\n//Ids for direction\nconst LEFT = 0, UP = 1, RIGHT = 2, DOWN = 3;\n\n// keycodes\nconst KEY_LEFT = 37, KEY_UP = 38, KEY_RIGHT = 39, KEY_DOWN = 40;\n\nlet canvas, ctx, keystate, frames, score;\n\nfunction setFood() {\n  var empty = [];\n\n  for (var x = 0; x < grid.width; x++) {\n    for (var y = 0; y < grid.height; y++) {\n      if (grid.get(x, y) === EMPTY) {\n        empty.push({ x: x, y: y })\n      }\n    }\n  }\n\n  var randpos = empty[Math.floor(Math.random() * empty.length)];\n  grid.set(FOOD, randpos.x, randpos.y);\n}\n\n\n\nfunction init() {\n  score = 0;\n  grid.init(EMPTY, COLS, ROWS);\n\n  var sp = { x: Math.floor(COLS / 2), y: ROWS - 1 }\n  snake.init(UP, sp.x, sp.y);\n  grid.set(SNAKE, sp.x, sp.y);\n\n  setFood();\n}\nfunction loop() {\n  update();\n  draw();\n\n  window.requestAnimationFrame(loop, canvas);\n}\nfunction update() {\n  frames++;\n\n  if (keystate[KEY_LEFT] && snake.direction !== RIGHT) snake.direction = LEFT;\n  if (keystate[KEY_UP] && snake.direction !== DOWN) snake.direction = UP;\n  if (keystate[KEY_RIGHT] && snake.direction !== LEFT) snake.direction = RIGHT;\n  if (keystate[KEY_DOWN] && snake.direction !== UP) snake.direction = DOWN;\n\n  if (frames % 10 === 0) {\n    var nx = snake.last.x;\n    var ny = snake.last.y;\n\n    switch (snake.direction) {\n      case LEFT:\n        nx--\n        break;\n      case UP:\n        ny--;\n        break;\n      case RIGHT:\n        nx++;\n        break;\n      case DOWN:\n        ny++;\n        break;\n    }\n\n    if (0 > nx || nx > grid.width - 1 ||\n      0 > ny || ny > grid.height - 1 ||\n      grid.get(nx, ny) === SNAKE\n    ) {\n      return init();\n    }\n    let tail= null;\n    if (grid.get(nx, ny) === FOOD) {\n      score++;\n       tail = { x: nx, y: ny }\n      setFood();\n    } else {\n       tail = snake.remove();\n      grid.set(EMPTY, tail.x, tail.y);\n      tail.x = nx;\n      tail.y = ny;\n    }\n\n\n    grid.set(SNAKE, tail.x, tail.y);\n\n    snake.insert(tail.x, tail.y);\n  }\n\n}\nfunction draw() {\n  var tw = canvas.width / grid.width;\n  var th = canvas.height / grid.height;\n\n  for (var x = 0; x < grid.width; x++) {\n    for (var y = 0; y < grid.height; y++) {\n      switch (grid.get(x, y)) {\n        case EMPTY:\n          ctx.fillStyle = \"#fff\";\n          break;\n        case SNAKE:\n          ctx.fillStyle = \"#0ff\";\n          break;\n        case FOOD:\n          ctx.fillStyle = \"#f00\";\n          break;\n      }\n      ctx.fillRect(x * tw, y * th, tw, th);\n    }\n  }\n  ctx.fillStyle = \"#000\";\n  ctx.fillText(\"score : \" + score, 10, canvas.height - 10);\n}\n\nclass App extends Component {\n\n\n\n  componentWillMount() {\n    canvas = document.createElement(\"canvas\");\n    canvas.width = ROWS * 20;\n    canvas.height = COLS * 20;\n    ctx = canvas.getContext(\"2d\");\n    document.body.appendChild(canvas);\n\n    frames = 0;\n    keystate = {};\n\n    document.addEventListener(\"keydown\", function (evt) {\n      keystate[evt.keyCode] = true\n    })\n\n    document.addEventListener(\"keyup\", function (evt) {\n      delete keystate[evt.keyCode];\n    })\n    init();\n    loop();\n  }\n  render() {\n    return (\n      <div className=\"fix\">\n      </div>\n    );\n  }\n}\n\nexport default App;\n","class Grid {\n\n    init(d, c, r) {\n        this.width = c;\n        this.height = r;\n        this._grid = [];\n\n        for (var x = 0; x < c; x++) {\n            this._grid.push([]);\n            for (var y = 0; y < r; y++) {\n                this._grid[x].push(d);\n            }\n        }\n    }\n\n    set(val, x, y) {\n        this._grid[x][y] = val;\n    }\n    get(x, y) {\n        return this._grid[x][y];\n    }\n}\n\nexport default Grid;","class Snake {\n\n\n    init(d, x, y) {\n\n        this.direction = d;\n        this._queue = [];\n        this.insert(x, y);\n    }\n    insert(x, y) {\n        this._queue.unshift({ x: x, y: y });\n        this.last = this._queue[0];\n    }\n    remove() {\n        return this._queue.pop();\n    }\n}\n\nexport default Snake;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}